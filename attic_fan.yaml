esphome:
  name: attic-fan
  friendly_name: attic-fan

esp32:
  board: esp32-s2-saola-1
  framework:
    type: arduino

# Enable detailed logging
logger:
  level: DEBUG
  baud_rate: 0
  logs:
    bme280.sensor: DEBUG
    i2c.arduino: DEBUG
    component: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Attic-Fan Fallback Hotspot"
    password: !secret ap_password

captive_portal:

# Web server for local UI
web_server:
  port: 80
  version: 3
  auth:
    username: !secret web_username
    password: !secret web_password
  local: true
  ota: true
  sorting_groups:
    - id: sorting_group_sensors
      name: "Sensor Readings"
      sorting_weight: 10
    - id: sorting_group_controls
      name: "Fan Controls"
      sorting_weight: 20

# I2C bus for BME280
i2c:
  sda: 9
  scl: 7
  scan: true

# BME280 sensor
sensor:
  - platform: bme280_i2c
    temperature:
      name: "Attic Temperature"
      id: attic_temperature
      unit_of_measurement: "°F"
      web_server:
        sorting_group_id: sorting_group_sensors
        sorting_weight: 10
      filters:
        - multiply: 1.8
        - offset: 32
        - sliding_window_moving_average:
            window_size: 5
            send_every: 1
      on_value:
        then:
          - if:
              condition:
                and:
                  - switch.is_on: auto_mode
                  - lambda: |-
                      return id(attic_temperature).state > id(temp_threshold).state;
              then:
                - switch.turn_on: attic_fan
                - logger.log: "Temperature above threshold, turning fan ON"
          - if:
              condition:
                and:
                  - switch.is_on: auto_mode
                  - lambda: |-
                      return id(attic_temperature).state < id(temp_threshold).state - 2;
              then:
                - switch.turn_off: attic_fan
                - logger.log: "Temperature below threshold, turning fan OFF"
    pressure:
      name: "Attic Pressure"
      id: attic_pressure
      web_server:
        sorting_group_id: sorting_group_sensors
        sorting_weight: 20
    humidity:
      name: "Attic Humidity"
      id: attic_humidity
      web_server:
        sorting_group_id: sorting_group_sensors
        sorting_weight: 30
    address: 0x76
    update_interval: 30s

# Time component for logging
time:
  - platform: homeassistant
    id: esptime

# Relay control
switch:
  - platform: template
    name: "Automatic Mode"
    id: auto_mode
    optimistic: true
    assumed_state: true
    turn_on_action:
      - lambda: |-
          id(auto_mode).state = true;
    turn_off_action:
      - lambda: |-
          id(auto_mode).state = false;
    lambda: |-
      if (id(auto_mode).state) {
        return true;
      } else {
        return false;
      }
    icon: "mdi:check-circle"
    web_server:
      sorting_group_id: sorting_group_controls
      sorting_weight: 1
    
  - platform: gpio
    name: "Attic Fan"
    id: attic_fan
    web_server:
      sorting_group_id: sorting_group_controls
      sorting_weight: 10
    pin:
      number: 5
      inverted: true
    restore_mode: RESTORE_DEFAULT_OFF

# Status LED
binary_sensor:
  - platform: status
    name: "Attic Fan Status"
    id: attic_fan_status

# Text sensor for firmware info
text_sensor:
  - platform: version
    name: "Attic Fan Version"

number:
  - platform: template
    name: "Temperature Threshold"
    id: temp_threshold
    min_value: 75
    max_value: 120
    step: 1
    unit_of_measurement: "°F"
    initial_value: 100
    optimistic: true
    restore_value: true
    set_action:
      then:
        - logger.log: 
            format: "Temperature threshold set to %.1f°F"
            args: ["x"]
    web_server:
      sorting_group_id: sorting_group_controls
      sorting_weight: 5

# Remove the extra temperature controls since we only need one threshold 